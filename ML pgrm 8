import matplotlib.pyplot as plt
from sklearn import datasets
from sklearn.cluster import KMeans
import sklearn.metrics as sm
import pandas as pd
import numpy as np




iris = datasets.load_iris()
X = pd.DataFrame(iris.data)
X.columns = ['sepal_length','sepal_width','petal_length','petal_width']
y = pd.DataFrame(iris.target)
y.columns = ['Targets']



plt.figure(figsize=(20,20))
colormap = np.array(['red','lime','black'])
plt.subplot(2,2,1)
plt.scatter(X.petal_length,X.petal_width, c=colormap[y.Targets],s = 15)
plt.title('Real Clusters')
plt.xlabel('petal length')
plt.ylabel('petal width')
model = KMeans(n_clusters = 3)
model.fit(X)

plt.subplot(2,2,2)
plt.scatter(X.petal_length,X.petal_width,c = colormap[model.labels_],s=40)
plt.title('K-Means Clustering')
plt.xlabel('petal length')
plt.ylabel('petal width')




from sklearn import preprocessing
scaler = preprocessing.StandardScaler()
scaler.fit(X)
xsa = scaler.transform(X)
xs = pd.DataFrame(xsa,columns=X.columns)

from sklearn.mixture import GaussianMixture
gmm = GaussianMixture(n_components = 3)
gmm.fit(xs)
gmm_y = gmm.predict(xs)

plt.subplot(2,2,3)
plt.scatter(X.petal_length,X.petal_width,c=colormap[gmm_y],s=40)
plt.title('GMM Clustering')
plt.xlabel('petal length')
plt.ylabel('petal width')




print('Accuracy of K-Means Clustering ')
print(sm.accuracy_score(y, model.labels_))

sm.confusion_matrix(y, model.labels_)




print('Accuracy of GMM Clustering ')
print(sm.accuracy_score(y, gmm_y))

sm.confusion_matrix(y, gmm_y)


